[
  {
    "id": 1,
    "title": "O que são React Hooks?",
    "slug": "o-que-sao-react-hooks",
    "excerpt": "Aprenda como os Hooks permitem adicionar estado, efeitos e contexto a componentes funcionais no React.",
    "content": "# O que são React Hooks?\n\nHooks são funções que permitem que você “ligue” componentes funcionais ao **estado interno do React** e a outros recursos da biblioteca, como ciclo de vida, contexto, efeitos colaterais e refs.\n\n## Principais Hooks e Seu Uso\n\n### useState\nPermite adicionar estado local em componentes funcionais.\n```js\nconst [contador, setContador] = useState(0);\n```\n\n### useEffect\nExecuta efeitos colaterais, como chamadas API ou timers.\n```js\nuseEffect(() => {\n  fetchDados();\n}, [id]);\n```\n\n### useContext\nFacilita o compartilhamento de dados sem precisar prop drilling.\n\n---\n\n## Ganchos Customizados\nVocê pode criar seus próprios hooks para **reutilizar lógica** entre componentes.\n\n---\n\n## Benefícios\n- Código mais limpo e legível\n- Reutilização de lógica\n- Melhor separação de preocupações\n- Ecossistema crescente\n\n---\n\n## Dicas para começar\n1. Domine `useState` e `useEffect` primeiro.\n2. Explore exemplos na documentação oficial.\n3. Use hooks customizados para lógica recorrente.\n4. Utilize linters para evitar erros comuns.\n\n---\n\nReact Hooks trouxeram uma nova era para o React: mais simples, mais funcional e alinhado com as melhores práticas modernas.",
    "category": "React",
    "tags": ["React", "Hooks", "JavaScript"],
    "author": "Ismael Nunes",
    "date": "2025-01-15",
    "readTime": "6 min",
    "status": "published",
    "featured": false,
    "image": "images/blog/react-hooks"
  },
  {
    "id": 2,
    "title": "Os 5 Hábitos de Programadores de Sucesso",
    "slug": "os-5-habitos-programadores-sucesso",
    "excerpt": "Descubra os hábitos que diferenciam programadores comuns dos excepcionais e como aplicá-los na sua rotina.",
    "content": "# Os 5 Hábitos de Programadores de Sucesso\n\nO sucesso vai além do domínio técnico: está em **hábitos diários** que transformam esforço em resultados.\n\n## 1. Aprendizado Contínuo e Adaptabilidade\n- Dedique tempo diário para aprender algo novo.\n- Cultive uma mentalidade de crescimento.\n- Use GitHub, Stack Overflow, blogs técnicos e newsletters.\n\n## 2. Código Limpo e de Qualidade\n- Nomes descritivos para variáveis e funções.\n- Comentários estratégicos.\n- Refatoração constante.\n- Testes automatizados.\n\n## 3. Gestão de Tempo e Foco\n- Técnica Pomodoro.\n- Matriz de Eisenhower.\n- Ambiente sem distrações.\n- Checklists diários.\n\n## 4. Resolução Sistemática de Problemas\n- Decomposição em partes menores.\n- Planejamento antes de codar.\n- Prototipagem rápida.\n- Pensamento crítico.\n\n## 5. Colaboração e Comunicação Efetiva\n- Code reviews construtivos.\n- Compartilhamento de conhecimento.\n- Comunicação clara.\n- Participação em comunidades.\n\n---\n\n## Implementação Prática\n1. Escolha **um hábito** e pratique por semanas.\n2. Use métricas para medir progresso.\n3. Ajuste a rotina com consistência.\n\n---\n\n## Benefícios\n- Crescimento acelerado\n- Melhor qualidade do código\n- Rede de contatos sólida\n- Satisfação pessoal e profissional\n\n---\n\n> \"O sucesso não é produto de talento, mas de hábitos consistentes ao longo do tempo.\"",
    "category": "Carreira",
    "tags": ["produtividade", "programação", "carreira"],
    "author": "Ismael Nunes",
    "date": "2025-08-29",
    "readTime": "10 min",
    "status": "published",
    "featured": true,
    "image": "images/blog/habitos-programacao"
  }
]
